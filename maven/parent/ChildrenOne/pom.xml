<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>parent</artifactId>
        <groupId>com.zj</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>ChildrenOne</artifactId>



    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
<!--            方法一-->
<!--            阻止传递依赖，项目A依赖B，项目B依赖C，这时候项目C依赖A，但是不想要A/B中的某些依赖就是用下面的方式不使用他们的依赖-->
            <exclusions>
<!--                <exclusion>-->
<!--                    <groupId></groupId>-->
<!--                    <artifactId></artifactId>-->
<!--                </exclusion>-->
            </exclusions>
        </dependency>
        <!--            方法二-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
        <!--这时候就不会出现传递依赖了-->
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>

                </plugin>
                <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>

                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>

                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>

                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>

                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>

                </plugin>
                <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>

                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>

                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
