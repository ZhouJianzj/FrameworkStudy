<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">
<!--导入数据库的配置信息-->
   <context:property-placeholder location="classpath:jdbc.properties"/>
<!--给连接池配置数据库-->
    <bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
<!--        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>-->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
    </bean>
<!--给sqlSessionFactory配置数据库连接池-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>
<!--spring注解的对象扫描-->
    <context:component-scan base-package="com.Jianzhou.service.imple"/>
    <context:component-scan base-package="com.Jianzhou.entites"/>

    <!--创建dao层的对象 使用到的是sqlSession的getMapper()方法生成dao层对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--配置sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
        <!--指定dao层接口的位置，好让getMapper方法生成实现类-->
        <property name="basePackage" value="com.Jianzhou.dao"/>
    </bean>


</beans>